/**
 * Minified by jsDelivr using UglifyJS v3.1.10.
 * Original file: /npm/screw-filereader@1.4.3/index.js
 * 
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
!function(){function e(e){return new Promise(function(t,r){e.onload=e.onerror=function(n){e.onload=e.onerror=null,"load"===n.type?t(e.result||e):r(new Error("Failed to read the blob/file"))}})}function t(t){var r=new Image;return r.src=t,e(r)}function r(e){var t=new DataView(e);if(65496!=t.getUint16(0,!1))return-2;for(var r=t.byteLength,n=2;n<r;){var a=t.getUint16(n,!1);if(n+=2,65505==a){if(1165519206!=t.getUint32(n+=2,!1))return-1;var o=18761==t.getUint16(n+=6,!1);n+=t.getUint32(n+4,o);var i=t.getUint16(n,o);n+=2;for(var u=0;u<i;u++)if(274==t.getUint16(n+12*u,o))return t.getUint16(n+12*u+8,o)}else{if(65280!=(65280&a))break;n+=t.getUint16(n,!1)}}return-1}function n(e){return e.slice(0,65536).arrayBuffer().then(r).then(function(r){return Promise.resolve(e.url()||e.dataURL()).then(t).then(function(e){return r<2?e:function(e,t){var r=e.width,n=e.height,a=document.createElement("canvas"),o=a.getContext("2d");switch(s.revokeObjectURL(e.src),t>4&&t<9?(a.width=n,a.height=r):(a.width=r,a.height=n),t){case 2:o.transform(-1,0,0,1,r,0);break;case 3:o.transform(-1,0,0,-1,r,n);break;case 4:o.transform(1,0,0,-1,0,n);break;case 5:o.transform(0,1,1,0,0,0);break;case 6:o.transform(0,1,-1,0,n,0);break;case 7:o.transform(0,-1,-1,0,n,r);break;case 8:o.transform(0,-1,1,0,0,r)}return o.drawImage(e,0,0),new Promise(function(e){a.toBlob(e)})}(e,r).then(function(e){return e.url()||e.dataURL()}).then(t)})})}if("undefined"==typeof Blob)return console.warn("Screw-FileReader is only meant to work in thoseengine who already has some basic support for blob");var a=Blob.prototype,o=!1,i=!1,u=!1,s=window.URL||window.webkitURL;try{new ReadableStream({}),i=!0}catch(e){}try{new ReadableStream({type:"bytes"}),o=!0}catch(e){}try{new Response(new Blob).getReader(),u=!0}catch(e){}a.arrayBuffer||(a.arrayBuffer=function(){var t=new FileReader;return t.readAsArrayBuffer(this),e(t)}),a.text||(a.text=function(){var t=new FileReader;return t.readAsText(this),e(t)}),a.dataURL||(a.dataURL=function(){var t=new FileReader;return t.readAsDataURL(this),e(t)}),a.url||(a.url=function(){return s?s.createObjectURL(this):null}),a.json||(a.json=function(){return this.text().then(JSON.parse)}),a.image||(a.image=function(e){return n(this).then(function(t){return!e&&s.revokeObjectURL(t.src),t})}),a.stream||(a.stream=o?function(){var e=0,t=this;return new ReadableStream({type:"bytes",autoAllocateChunkSize:524288,pull:function(r){var n=r.byobRequest.view;return t.slice(e,e+n.byteLength).arrayBuffer().then(function(a){var o=new Uint8Array(a),i=o.byteLength;e+=i,n.set(o),r.byobRequest.respond(i),e>=t.size&&r.close()})}})}:i?function(e){var t=0,e=this;return new ReadableStream({pull:function(r){return e.slice(t,t+524288).arrayBuffer().then(function(n){t+=n.byteLength;var a=new Uint8Array(n);r.enqueue(a),t==e.size&&r.close()})}})}:u?function(){return new Response(this).body}:function(){throw new Error("Include https://github.com/creatorrr/web-streams-polyfill")})}();
//# sourceMappingURL=/sm/81210c6c1e648b33f264911edaf172fab136fdb50c618fb62c49f56fe4b5225f.map